# Generated by Django 5.2.5 on 2025-08-23 04:52

import core.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MoodLabel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=48)),
                ('emoji', models.CharField(blank=True, max_length=8, null=True)),
                ('color', models.CharField(blank=True, max_length=16, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mood_labels', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MoodDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('note', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mood_days', to=settings.AUTH_USER_MODEL)),
                ('labels', models.ManyToManyField(blank=True, related_name='days', to='core.moodlabel')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='MusicTrack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=core.models.music_path)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('artist', models.CharField(blank=True, max_length=255, null=True)),
                ('duration', models.FloatField(blank=True, null=True)),
                ('size_bytes', models.BigIntegerField(blank=True, null=True)),
                ('sha256', models.CharField(max_length=64)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('body_html', models.TextField(blank=True, null=True)),
                ('body_json', models.JSONField(blank=True, null=True)),
                ('created_for', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('unlock_at', models.DateTimeField(blank=True, null=True)),
                ('visibility', models.CharField(choices=[('private', 'Private'), ('unlisted', 'Unlisted')], default='private', max_length=16)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to=settings.AUTH_USER_MODEL)),
                ('soundtrack', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.musictrack')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WordStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.CharField(max_length=7)),
                ('lemma', models.CharField(max_length=64)),
                ('count', models.IntegerField()),
                ('avg_sentiment', models.FloatField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wordstats', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-period', '-count'],
            },
        ),
        migrations.CreateModel(
            name='Constellation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('is_auto', models.BooleanField(default=False)),
                ('method', models.CharField(blank=True, max_length=64, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='constellations', to=settings.AUTH_USER_MODEL)),
                ('entries', models.ManyToManyField(blank=True, related_name='constellations', to='core.entry')),
            ],
            options={
                'ordering': ['name'],
                'constraints': [models.UniqueConstraint(fields=('user', 'name'), name='uniq_user_constellation_name')],
            },
        ),
        migrations.CreateModel(
            name='EntryEmbedding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x', models.FloatField()),
                ('y', models.FloatField()),
                ('year', models.IntegerField()),
                ('model_version', models.CharField(max_length=32)),
                ('entry', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='embedding', to='core.entry')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='embeddings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['user', 'year'], name='core_entrye_user_id_622033_idx')],
            },
        ),
        migrations.CreateModel(
            name='MediaAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('image', 'Image'), ('video', 'Video'), ('audio', 'Audio')], max_length=8)),
                ('file', models.FileField(blank=True, null=True, upload_to=core.models.entry_media_path)),
                ('external_url', models.URLField(blank=True, null=True)),
                ('width', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('duration', models.FloatField(blank=True, null=True)),
                ('order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='core.entry')),
            ],
            options={
                'ordering': ['order', 'id'],
                'indexes': [models.Index(fields=['entry'], name='core_mediaa_entry_i_15b015_idx'), models.Index(fields=['type'], name='core_mediaa_type_9643fc_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='moodlabel',
            constraint=models.UniqueConstraint(fields=('user', 'name'), name='uniq_user_moodlabel'),
        ),
        migrations.AddConstraint(
            model_name='moodday',
            constraint=models.UniqueConstraint(fields=('user', 'date'), name='uniq_user_date'),
        ),
        migrations.AddConstraint(
            model_name='musictrack',
            constraint=models.UniqueConstraint(fields=('user', 'sha256'), name='uniq_user_trackhash'),
        ),
        migrations.AddIndex(
            model_name='entry',
            index=models.Index(fields=['user', 'created_for'], name='core_entry_user_id_650f86_idx'),
        ),
        migrations.AddIndex(
            model_name='entry',
            index=models.Index(fields=['user', '-created_at'], name='core_entry_user_id_cd066a_idx'),
        ),
        migrations.AddConstraint(
            model_name='wordstat',
            constraint=models.UniqueConstraint(fields=('user', 'period', 'lemma'), name='uniq_user_period_lemma'),
        ),
    ]
